// <auto-generated />
using System;
using AngelaAraujo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AngelaAraujo.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("ServicoId")
                        .HasColumnType("integer");

                    b.HasKey("AgendamentoId", "ServicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("AgendamentoServico");
                });

            modelBuilder.Entity("AngelaAraujo.Models.Agendamento", b =>
                {
                    b.Property<int>("idAgendamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idAgendamento"));

                    b.Property<int?>("AgendamentoidAgendamento")
                        .HasColumnType("integer");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("atendimentoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("criadoPor")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dataHoraFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dataHoraInicio")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("idAgendamento");

                    b.HasIndex("AgendamentoidAgendamento");

                    b.HasIndex("IdCliente");

                    b.HasIndex("atendimentoId");

                    b.ToTable("Agendamento", (string)null);
                });

            modelBuilder.Entity("AngelaAraujo.Models.Atendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("integer");

                    b.Property<int>("IdAgendamento")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RealizadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RealizadoPor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorCobrado")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgendamento");

                    b.ToTable("Atendimento", (string)null);
                });

            modelBuilder.Entity("AngelaAraujo.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("AngelaAraujo.Models.Servico", b =>
                {
                    b.Property<int>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServico"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("duracaoMinutos")
                        .HasColumnType("interval");

                    b.Property<double>("preco")
                        .HasColumnType("double precision");

                    b.HasKey("IdServico");

                    b.ToTable("Servico", (string)null);
                });

            modelBuilder.Entity("AngelaAraujo.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("AgendamentoServico", b =>
                {
                    b.HasOne("AngelaAraujo.Models.Agendamento", null)
                        .WithMany()
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngelaAraujo.Models.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngelaAraujo.Models.Agendamento", b =>
                {
                    b.HasOne("AngelaAraujo.Models.Agendamento", null)
                        .WithMany("Agendamentos")
                        .HasForeignKey("AgendamentoidAgendamento");

                    b.HasOne("AngelaAraujo.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngelaAraujo.Models.Atendimento", "atendimento")
                        .WithMany()
                        .HasForeignKey("atendimentoId");

                    b.Navigation("Cliente");

                    b.Navigation("atendimento");
                });

            modelBuilder.Entity("AngelaAraujo.Models.Atendimento", b =>
                {
                    b.HasOne("AngelaAraujo.Models.Agendamento", "Agendamento")
                        .WithMany("Atendimentos")
                        .HasForeignKey("IdAgendamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("AngelaAraujo.Models.Agendamento", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Atendimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
